<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevDebugProjectContainerUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_register' => array (  0 =>   array (    0 => 'token',    1 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_registerAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'text',      1 => '/api/user/register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_edit' => array (  0 =>   array (    0 => 'token',    1 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_editAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'text',      1 => '/api/user/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_token' => array (  0 =>   array (    0 => 'token',    1 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_tokenAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'text',      1 => '/api/user/token',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_login' => array (  0 =>   array (    0 => 'username',    1 => 'password',    2 => 'token',    3 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_loginAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    5 =>     array (      0 => 'text',      1 => '/api/user/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_user_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/users/index.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_user_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::editAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/users/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_user_followers' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::followersAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/users/followers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_user_followings' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::followingsAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/users/followings',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_user_comments' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::commentsAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/users/comments',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_user_ratings' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::ratingsAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/users/ratings',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_user_ringtones' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::ringtonesAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/users/ringtones',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_user_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::viewAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/users/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_user_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/users/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_change_password' => array (  0 =>   array (    0 => 'id',    1 => 'password',    2 => 'new_password',    3 => 'token',    4 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_change_passwordAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'new_password',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    6 =>     array (      0 => 'text',      1 => '/api/user/password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_edit_name' => array (  0 =>   array (    0 => 'id',    1 => 'name',    2 => 'key',    3 => 'token',    4 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_edit_nameAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'key',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    6 =>     array (      0 => 'text',      1 => '/api/user/name',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_email' => array (  0 =>   array (    0 => 'email',    1 => 'token',    2 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\ResettingController::api_emailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'email',    ),    4 =>     array (      0 => 'text',      1 => '/api/user/email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_request' => array (  0 =>   array (    0 => 'key',    1 => 'token',    2 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\ResettingController::api_requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'key',    ),    4 =>     array (      0 => 'text',      1 => '/api/user/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_reset' => array (  0 =>   array (    0 => 'id',    1 => 'key',    2 => 'new_password',    3 => 'token',    4 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\ResettingController::api_resetAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'new_password',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'key',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    6 =>     array (      0 => 'text',      1 => '/api/user/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_check' => array (  0 =>   array (    0 => 'id',    1 => 'key',    2 => 'token',    3 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_checkAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'key',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/user/check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_upload' => array (  0 =>   array (    0 => 'id',    1 => 'key',    2 => 'token',    3 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_uploadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'key',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/api/user/upload',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_get' => array (  0 =>   array (    0 => 'user',    1 => 'me',    2 => 'token',    3 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_getAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'me',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    5 =>     array (      0 => 'text',      1 => '/api/user/get',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_get_followers' => array (  0 =>   array (    0 => 'user',    1 => 'token',    2 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_followersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    4 =>     array (      0 => 'text',      1 => '/api/user/followers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_get_followings' => array (  0 =>   array (    0 => 'user',    1 => 'token',    2 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_followingsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    4 =>     array (      0 => 'text',      1 => '/api/user/followings',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_follow' => array (  0 =>   array (    0 => 'user',    1 => 'follower',    2 => 'key_',    3 => 'token',    4 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_followAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'key_',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'follower',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    6 =>     array (      0 => 'text',      1 => '/api/user/follow',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_get_followingstop' => array (  0 =>   array (    0 => 'user',    1 => 'token',    2 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_followingstopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    4 =>     array (      0 => 'text',      1 => '/api/user/followingstop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_follow_check' => array (  0 =>   array (    0 => 'user',    1 => 'follower',    2 => 'key_',    3 => 'token',    4 => 'purchase',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\UserController::api_follow_checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'key_',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'follower',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    6 =>     array (      0 => 'text',      1 => '/api/user/follow/check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_home_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\HomeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_home_tags_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\HomeController::tagsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tags/index.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_home_tags_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\HomeController::deletetagAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/tags/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_home_notif_ringtone' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\HomeController::notifRingtoneAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/notif/ringtone.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_home_notif_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\HomeController::notifUrlAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/notif/url.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_home_notif_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\HomeController::notifUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/notif/user.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_home_notif_category' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\HomeController::notifCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/notif/category.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_home_api_device' => array (  0 =>   array (    0 => 'tkn',    1 => 'token',    2 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\HomeController::api_deviceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tkn',    ),    4 =>     array (      0 => 'text',      1 => '/api/device',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_support_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SupportController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/support/index.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_support_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SupportController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/support/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_support_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SupportController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/support/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_support_add' => array (  0 =>   array (    0 => 'token',    1 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SupportController::api_addAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'text',      1 => '/api/support/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_report_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ReportController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/report/index.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_report_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ReportController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/report/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_report_add' => array (  0 =>   array (    0 => 'token',    1 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\ReportController::api_addAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'text',      1 => '/api/report/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_slide_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SlideController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/slide/add.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_slide_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SlideController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/slide/index.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_slide_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SlideController::editAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/slide',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_slide_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SlideController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/slide/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_slide_up' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SlideController::upAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/slide/up',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_slide_down' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SlideController::downAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/slide/down',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_slide_all' => array (  0 =>   array (    0 => 'token',    1 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\SlideController::api_allAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'text',      1 => '/api/slide/all',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_category_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CategoryController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/category/index.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_category_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CategoryController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/category/add.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_category_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CategoryController::editAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/category/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_category_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CategoryController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/category/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_category_up' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CategoryController::upAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/category/up',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_category_down' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CategoryController::downAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/category/down',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_category_by' => array (  0 =>   array (    0 => 'id',    1 => 'token',    2 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CategoryController::api_byAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/api/category/by',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_category_all' => array (  0 =>   array (    0 => 'token',    1 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CategoryController::api_allAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'text',      1 => '/api/category/all',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_category_popular' => array (  0 =>   array (    0 => 'token',    1 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CategoryController::api_popularAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'text',      1 => '/api/category/popular',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_tags_all' => array (  0 =>   array (    0 => 'token',    1 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\CategoryController::api_tagsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'text',      1 => '/api/tags/all',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_version_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\VersionController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/version/add.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_version_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\VersionController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/version/index.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_version_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\VersionController::editAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/version/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_version_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\VersionController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/version/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_version_check' => array (  0 =>   array (    0 => 'code',    1 => 'token',    2 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\VersionController::api_check_v2Action',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    4 =>     array (      0 => 'text',      1 => '/api/version/check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_ringtone_share' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::shareAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/share',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_ringtone_multi' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::multiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ringtone/multi.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_ringtone_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ringtone/add.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_ringtone_reviews' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::reviewsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ringtone/reviews.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_ringtone_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ringtone/index.html',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_ringtone_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::editAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/ringtone/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_ringtone_review' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::reviewAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/ringtone/review',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_ringtone_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::viewAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/ringtone/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_ringtone_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.html',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/ringtone/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ringtone_all' => array (  0 =>   array (    0 => 'order',    1 => 'page',    2 => 'token',    3 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::api_allAction',  ),  2 =>   array (    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    5 =>     array (      0 => 'text',      1 => '/api/ringtone/all',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ringtone_by_category' => array (  0 =>   array (    0 => 'page',    1 => 'category',    2 => 'token',    3 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::api_by_categoryAction',  ),  2 =>   array (    'page' => '\\d+',    'category' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'category',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/api/ringtone/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ringtone_by_user' => array (  0 =>   array (    0 => 'page',    1 => 'user',    2 => 'token',    3 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::api_by_userAction',  ),  2 =>   array (    'page' => '\\d+',    'user' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'user',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/api/ringtone/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ringtone_get' => array (  0 =>   array (    0 => 'id',    1 => 'token',    2 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::api_getAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/api/ringtone/get',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ringtone_by_me' => array (  0 =>   array (    0 => 'page',    1 => 'user',    2 => 'token',    3 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::api_by_meAction',  ),  2 =>   array (    'page' => '\\d+',    'user' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'user',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/api/ringtone/me',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ringtone_related' => array (  0 =>   array (    0 => 'id',    1 => 'token',    2 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::api_relatedAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/api/ringtone/related',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ringtone_by_query' => array (  0 =>   array (    0 => 'page',    1 => 'query',    2 => 'token',    3 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::api_by_queryAction',  ),  2 =>   array (    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'query',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/api/ringtone/query',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ringtone_by_follow' => array (  0 =>   array (    0 => 'page',    1 => 'user',    2 => 'token',    3 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::api_by_followAction',  ),  2 =>   array (    'page' => '\\d+',    'user' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'user',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/api/ringtone/by/follow',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rate_add' => array (  0 =>   array (    0 => 'user',    1 => 'ringtone',    2 => 'value',    3 => 'token',    4 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::api_add_rateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'value',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ringtone',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    6 =>     array (      0 => 'text',      1 => '/api/rate/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_rate_get' => array (  0 =>   array (    0 => 'user',    1 => 'ringtone',    2 => 'token',    3 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::api_get_rateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ringtone',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    5 =>     array (      0 => 'text',      1 => '/api/rate/get',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ringtone_upload' => array (  0 =>   array (    0 => 'token',    1 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::api_uploadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'text',      1 => '/api/ringtone/upload',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_ringtone_add_download' => array (  0 =>   array (    0 => 'token',    1 => 'purchase',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RingtoneController::api_add_downloadAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'purchase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    3 =>     array (      0 => 'text',      1 => '/api/ringtone/add/download',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'media_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MediaBundle\\Controller\\MediaController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/medias/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'media_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MediaBundle\\Controller\\MediaController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/medias/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'media_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MediaBundle\\Controller\\MediaController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/medias/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_media_delete' => array (  0 =>   array (    0 => 'id',    1 => 'token',  ),  1 =>   array (    '_controller' => 'MediaBundle\\Controller\\MediaController::api_deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/medias/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'media_api_upload' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'MediaBundle\\Controller\\MediaController::api_uploadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/api/medias/upload',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liip_imagine_filter_runtime' => array (  0 =>   array (    0 => 'filter',    1 => 'hash',    2 => 'path',  ),  1 =>   array (    '_controller' => 'liip_imagine.controller:filterRuntimeAction',  ),  2 =>   array (    'filter' => '[A-z0-9_\\-]*',    'path' => '.+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'path',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hash',    ),    2 =>     array (      0 => 'text',      1 => '/rc',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[A-z0-9_\\-]*',      3 => 'filter',    ),    4 =>     array (      0 => 'text',      1 => '/media/cache/resolve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liip_imagine_filter' => array (  0 =>   array (    0 => 'filter',    1 => 'path',  ),  1 =>   array (    '_controller' => 'liip_imagine.controller:filterAction',  ),  2 =>   array (    'filter' => '[A-z0-9_\\-]*',    'path' => '.+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'path',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[A-z0-9_\\-]*',      3 => 'filter',    ),    2 =>     array (      0 => 'text',      1 => '/media/cache/resolve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
